name: Fork SonarCloud Analysis
on:
  workflow_run:
    workflows: [Pull Request From Fork]
    types:
      - completed

jobs:
  analyse:
    name: Download and analyse
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'
    
    steps:
      - name: 'Download artifact'
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "artifact"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/artifact.zip`, Buffer.from(download.data));

      - name: 'Unzip artifact'
        run: unzip artifact.zip
        
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          
      - name: Get PR details
        run: >
          echo "PR=$(cut -d ',' -f 1 pr_data.csv)" >> $GITHUB_ENV
          echo "BRANCH=$(cut -d ',' -f 2 pr_data.csv)" >> $GITHUB_ENV
          echo "BASE=$(cut -d ',' -f 3 pr_data.csv)" >> $GITHUB_ENV
      
      - name: SonarCloud analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: >
          mvn -B org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          -Dsonar.organization="ancouli"
          -Dsonar.projectKey="ancouli_spring-test"
          -Dsonar.java.spotbugs.reportPaths="target/spotbugsXml.xml"
          -Dsonar.scm.revision="${{ github.event.workflow_run.head_sha }}"
          -Dsonar.pullrequest.key="$PR"
          -Dsonar.pullrequest.branch="$BRANCH"
          -Dsonar.pullrequest.base="$BASE"