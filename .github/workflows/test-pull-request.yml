name: Pull Request From Fork
on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:  
  build:
    name: Build and test
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.head.repo.fork }}
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
      
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      
      - name: Build and test
        run: mvn -B verify spotbugs:spotbugs
        
      - name: Save PR details
        run: echo "${{ github.event.number }},${{ github.head_ref || 'master'}},${{ github.base_ref }}" > pr_data.csv
      
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: |
            src
            target
            pom.xml
            .git
            pr_data.csv
          retention-days: 1
        
  analyse:
    name: Download and analyse
    runs-on: ubuntu-latest
    needs: build
    environment: SONAR
    
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifact

#      - name: 'Unzip artifact'
#        run: unzip artifact.zip
        
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          
      - name: Get PR details
        run: >
          echo "PR=$(cut -d ',' -f 1 pr_data.csv)" >> $GITHUB_ENV
          echo "BRANCH=$(cut -d ',' -f 2 pr_data.csv)" >> $GITHUB_ENV
          echo "BASE=$(cut -d ',' -f 3 pr_data.csv)" >> $GITHUB_ENV
          
      - name: Dubug Info
        run: >
          echo "PR number is ${PR}"
          echo "Branch name is ${BRANCH}"
          echo "Base name is ${BASE}"
      
      - name: SonarCloud analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: >
          mvn -B org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          -Dsonar.organization=ancouli
          -Dsonar.projectKey=ancouli_spring-test
          -Dsonar.java.spotbugs.reportPaths=target/spotbugsXml.xml
          -Dsonar.scm.revision=${{ github.event.workflow_run.head_sha }}
          -Dsonar.pullrequest.key=${PR}
          -Dsonar.pullrequest.branch=${BRANCH}
          -Dsonar.pullrequest.base=${BASE}